<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Troy的网络博客</title>
    <link>https://wangcy6.github.io/</link>
    <description>Recent content on Troy的网络博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Tue, 26 Nov 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://wangcy6.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>FQA_Linux_one</title>
      <link>https://wangcy6.github.io/post/FQA_Linux_one/</link>
      <pubDate>Tue, 26 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://wangcy6.github.io/post/FQA_Linux_one/</guid>
      <description>当你的才华撑不起你的野心时，就应该静下心来好好学习。 知识卡 问题1 为什么采用epoll？ 第一步： 同步与阻塞，异步和非阻塞的区别？ 第二步：了解网</description>
    </item>
    
    <item>
      <title>mmap 为什么比 read/write 快</title>
      <link>https://wangcy6.github.io/post/simpread-mmap-%E4%B8%BA%E4%BB%80%E4%B9%88%E6%AF%94-read_write-%E5%BF%AB-%E5%85%BC%E8%AE%BA-buffercache-%E5%92%8C-pagecache-%E4%BB%8E%E5%86%85%E6%A0%B8%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F%E7%9C%8B%E6%96%87%E4%BB%B6%E8%AF%BB%E5%86%99%E8%BF%87%E7%A8%8B/</link>
      <pubDate>Tue, 26 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://wangcy6.github.io/post/simpread-mmap-%E4%B8%BA%E4%BB%80%E4%B9%88%E6%AF%94-read_write-%E5%BF%AB-%E5%85%BC%E8%AE%BA-buffercache-%E5%92%8C-pagecache-%E4%BB%8E%E5%86%85%E6%A0%B8%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F%E7%9C%8B%E6%96%87%E4%BB%B6%E8%AF%BB%E5%86%99%E8%BF%87%E7%A8%8B/</guid>
      <description>参考文献： 《从内核文件系统看文件读写过程》http://www.cnblogs.com/huxiao-tee/p/4660352.html?</description>
    </item>
    
    <item>
      <title>Redis.5.0</title>
      <link>https://wangcy6.github.io/post/FQA_Redis/</link>
      <pubDate>Wed, 20 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://wangcy6.github.io/post/FQA_Redis/</guid>
      <description>知识卡(redis.5.0) 内容 对象的类型和编码 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46</description>
    </item>
    
    <item>
      <title>协程库</title>
      <link>https://wangcy6.github.io/post/st/</link>
      <pubDate>Mon, 18 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://wangcy6.github.io/post/st/</guid>
      <description>走神一会 你生而有翼，为何竟愿一生匍匐前进，形如虫蚁？ 「学而不思则罔、思而不学则殆」的意思是： 想顺利的学会「内思」要与「关系」思考方式结合起来</description>
    </item>
    
    <item>
      <title>FQA_Linux</title>
      <link>https://wangcy6.github.io/post/FQA_Linux/</link>
      <pubDate>Sat, 16 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://wangcy6.github.io/post/FQA_Linux/</guid>
      <description>当你的才华撑不起你的野心时，就应该静下心来好好学习。 知识卡 一、基础 1、进程vs线程 问1 ：进程间通信方式 进程间通信 2个情况 第一个是 exchange data 传递数据</description>
    </item>
    
    <item>
      <title>FQA_Service_Mesh</title>
      <link>https://wangcy6.github.io/post/FQA_Service_Mesh/</link>
      <pubDate>Wed, 13 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://wangcy6.github.io/post/FQA_Service_Mesh/</guid>
      <description>book 未来架构：从服务化到云原生 分布式缓存，从原理到实践 分布式系统：从概念到设计 第五版 深入理解Linux内核中文第三版 第五章 内核同步 distributed-systems-theory-for-the-distributed-systems-engineer 业务场景 衡</description>
    </item>
    
    <item>
      <title>ARTS_weekly_5</title>
      <link>https://wangcy6.github.io/post/ARTS_Weekly_5/</link>
      <pubDate>Tue, 12 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://wangcy6.github.io/post/ARTS_Weekly_5/</guid>
      <description>打卡GTD践行第五周（2019-11-6） 一周记录 本周建立操作系统知识卡，根据问题来学习。 一. ARTS的初衷 周一 周二 周三 周四 周五 周六 周日 Algorithm Review</description>
    </item>
    
    <item>
      <title>nginx</title>
      <link>https://wangcy6.github.io/post/nginx/</link>
      <pubDate>Thu, 07 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://wangcy6.github.io/post/nginx/</guid>
      <description>知识卡 基本用法 负载均衡 1 负载均衡概念是什么学习过程： 观看视频 What is Load Balancing? 一句话输出 一致性hash 观看HAProxy相关视频 https://www.youtube.com/watch?v=escR-07yVAs 一句话输出 Virtual IP address ok A</description>
    </item>
    
    <item>
      <title>算法导论</title>
      <link>https://wangcy6.github.io/post/book_Algorithms-JeffE-BW/</link>
      <pubDate>Fri, 11 Oct 2019 17:02:43 +0800</pubDate>
      
      <guid>https://wangcy6.github.io/post/book_Algorithms-JeffE-BW/</guid>
      <description>这里没有告诉答案是什么？问题就这些 可以j 回溯法 题目1 把皇后问题 &amp;ndash;已经解决 题目 2 Subset Sum &amp;ndash;正在解决 Let’s consider a more complicated problem, called SubsetSum:</description>
    </item>
    
    <item>
      <title>36-逆序对</title>
      <link>https://wangcy6.github.io/post/%E5%89%91%E6%8C%87Offer_36_%E9%80%86%E5%BA%8F%E5%AF%B9/</link>
      <pubDate>Thu, 10 Oct 2019 17:02:43 +0800</pubDate>
      
      <guid>https://wangcy6.github.io/post/%E5%89%91%E6%8C%87Offer_36_%E9%80%86%E5%BA%8F%E5%AF%B9/</guid>
      <description>一、描述 在数组中的两个数字如果前面一个数字大于后面的数字，则这两个数字组成一个逆序对。 给你一个数组，求出这个数组中逆序对的总数。 逆序对概括：</description>
    </item>
    
    <item>
      <title>[每周阅读一本书]被讨厌的勇气</title>
      <link>https://wangcy6.github.io/post/2019-10-10-%E8%A2%AB%E8%AE%A8%E5%8E%8C%E7%9A%84%E5%8B%87%E6%B0%94/</link>
      <pubDate>Thu, 10 Oct 2019 17:02:43 +0800</pubDate>
      
      <guid>https://wangcy6.github.io/post/2019-10-10-%E8%A2%AB%E8%AE%A8%E5%8E%8C%E7%9A%84%E5%8B%87%E6%B0%94/</guid>
      <description>阅读推荐 &amp;mdash;被讨厌的勇气 书封 被讨厌的勇气 豆瓣 评分 8.6 万维钢 专栏 解读 本书以“青年”和“哲人”对话的形式，将阿德勒的哲学逐渐渗透于话语之</description>
    </item>
    
    <item>
      <title>Item 31: Minimize compilation dependencies between files</title>
      <link>https://wangcy6.github.io/post/Effective-C&#43;&#43;31/</link>
      <pubDate>Thu, 10 Oct 2019 17:02:43 +0800</pubDate>
      
      <guid>https://wangcy6.github.io/post/Effective-C&#43;&#43;31/</guid>
      <description>Effective C++ 31：最小化文件之间的编译依赖 分享最实用的经验 ， 希望每一位来访的朋友都能有所收获！ Item 31: Minimize compilation dependencies between files. 曾听老师讲过，每天上班的第一件事就是下载</description>
    </item>
    
    <item>
      <title>Memcached</title>
      <link>https://wangcy6.github.io/post/Memcached/</link>
      <pubDate>Thu, 10 Oct 2019 17:02:43 +0800</pubDate>
      
      <guid>https://wangcy6.github.io/post/Memcached/</guid>
      <description>提问的艺术</description>
    </item>
    
    <item>
      <title>关于我</title>
      <link>https://wangcy6.github.io/about/</link>
      <pubDate>Sun, 20 Aug 2017 21:38:52 +0800</pubDate>
      
      <guid>https://wangcy6.github.io/about/</guid>
      <description>我是谁 一. 我是谁 努力在提高自控能力，沟通同能力，表达能力的程序员。 二、 我能为你提供什么 通过每日一问，每周一总结方式 提供 c++，操作系统等基础</description>
    </item>
    
    <item>
      <title></title>
      <link>https://wangcy6.github.io/post/file/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://wangcy6.github.io/post/file/</guid>
      <description>文件系统-知识地图 知识卡 https://github.com/wangcy6/weekly/blob/master/KM/01%E7%B3%BB%E7%BB%9F%E7%9F%A5%E8%AF%86/file.md
阅读相关书籍  Linux 0.11内核完全注释 Linux内核设计与实现(第三版中文高清带目录) Linux设备驱动程序. Understanding the Linux Kernel, 3rd Editio Linux.Kernel.Cache MySQL技术内幕(InnoDB存储引擎)第2版. 性能之巅 洞悉系统、企业与云计算(完整版)  找不到电子版book
第一性原理  mysql 有b+作为索引，为什么liunx文件系统不用b+索引结构，采用inode下面一个固定大小数组来表示？
 为什么需要进行“格式化”呢
 ls -i 显示inode 就是 long 类型的编号 还有什么呀？
 文件存储在哪里呀？内存还是磁盘
 什么是缓存呀
 cache和buffer dentry objects and inode object 都在内存里有啥 区别？
  概念理解  缓存  文件系统 在 Linux 中一切皆文件。不仅普通的文件和目录，就连块设备、套接字、管道等，也都要通过统一的文件系统来管理。
Linux 下的文件系统主要可分为三大块：
一是上层的文件系统的系统调用，
二是虚拟文件系统 VFS(Virtual Filesystem Switch)，
三是挂载到 VFS 中的各实际文件系统
第一个问题：文件系统类型有哪些？  字符设备、块设备、网络设备</description>
    </item>
    
    <item>
      <title></title>
      <link>https://wangcy6.github.io/product/RocketMQ/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://wangcy6.github.io/product/RocketMQ/</guid>
      <description></description>
    </item>
    
    <item>
      <title></title>
      <link>https://wangcy6.github.io/product/thrift.apache/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://wangcy6.github.io/product/thrift.apache/</guid>
      <description></description>
    </item>
    
  </channel>
</rss>